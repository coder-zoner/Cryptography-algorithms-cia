#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char* running_key_encrypt(const char* plaintext, const char* running_key) {
    int len = strlen(plaintext);
    int key_len = strlen(running_key);
    char* result = (char*)malloc(len + 1);
    int key_index = 0;

    for (int i = 0; i < len; i++) {
        char char_in = plaintext[i];
        if (isalpha(char_in)) {
            char base = isupper(char_in) ? 'A' : 'a';
            int p = tolower(char_in) - 'a';
            int k = tolower(running_key[key_index % key_len]) - 'a';
            result[i] = (p + k) % 26 + base;
            key_index++;
        } else {
            result[i] = char_in;
        }
    }
    result[len] = '\0';
    return result;
}

char* running_key_decrypt(const char* ciphertext, const char* running_key) {
    int len = strlen(ciphertext);
    int key_len = strlen(running_key);
    char* result = (char*)malloc(len + 1);
    int key_index = 0;

    for (int i = 0; i < len; i++) {
        char char_in = ciphertext[i];
        if (isalpha(char_in)) {
            char base = isupper(char_in) ? 'A' : 'a';
            int c = tolower(char_in) - 'a';
            int k = tolower(running_key[key_index % key_len]) - 'a';
            result[i] = (c - k + 26) % 26 + base;
            key_index++;
        } else {
            result[i] = char_in;
        }
    }
    result[len] = '\0';
    return result;
}

int main() {
    char plaintext[] = "Running Key Cipher";
    char running_key[] = "Thisisaverylongkeytextusedforthiscipher";

    char* encrypted = running_key_encrypt(plaintext, running_key);
    char* decrypted = running_key_decrypt(encrypted, running_key);

    printf("Original:   %s\n", plaintext);
    printf("Encrypted:  %s\n", encrypted);
    printf("Decrypted:  %s\n", decrypted);

    free(encrypted);
    free(decrypted);
    return 0;
}
